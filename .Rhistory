# Ensure countries appear in a specific order
data_long[[country_var]] <- factor(
data_long[[country_var]],
levels = names(country_colors)
)
ggplot(data_long, aes(x = .data[[country_var]], y = mean_age, fill = fill_group)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7, color = "black") +
geom_text(aes(label = round(mean_age, 2)),
position = position_dodge(width = 0.7),
vjust = -0.5,
size = 4) +
facet_grid(rows = vars(age_group), switch = "y") +
scale_fill_manual(values = all_colors) +
labs(
title = title,
x = element_blank(),
y = element_blank(),
fill = "Country of Birth"
) +
theme_cowplot() +
ylim(y_limits) +
theme(
strip.background = element_blank(),
strip.text.y.left = element_text(size = 12, angle = 0, hjust = 1, face = "bold"),
axis.text.x = element_text(size = 11, face = "bold", angle = 45, hjust = 1),
panel.spacing = unit(0.5, "lines"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
legend.position = "none",
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.y = element_blank(),
panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
}
# with four panels
create_combined_faceted_age_plot <- function(data,
columns = 2,
age_vars = c("mean_age_at_immigration_15", "mean_age_at_immigration_15to49", "mean_age_at_immigration_50plus"),
country_var = "country_string",
title = element_blank(),
y_limits = c(0, .7)) {
country_colors <- c(
"Mexico" = "#E69F00",
"Puerto Rico" = "#56B4E9",
"Dominican Republic" = "#009E73",
"Cuba" = "#CC79A7"
)
data_long <- data %>%
pivot_longer(
cols = all_of(age_vars),
names_to = "age_group",
values_to = "mean_age"
) %>%
mutate(age_group = factor(age_group,
levels = age_vars,
labels = c("Less than 15", "15 to 49", "50 and above")),
country_string = factor(country_string,
levels = c("Mexico", "Puerto Rico", "Dominican Republic", "Cuba"))) %>%
arrange(country_string)
print(data_long)
plot_list <- lapply(unique(data_long[[country_var]]), function(country) {
# Get the specific color for this country
country_color <- country_colors[country]
ggplot(data_long[data_long[[country_var]] == country, ],
aes(x = age_group, y = mean_age)) +
# Use fill directly with the country color instead of mapping it to age_group
geom_bar(stat = "identity", position = "dodge", width = 0.7,
color = "black", fill = country_color) +
geom_text(aes(label = round(mean_age, 2)),
position = position_dodge(width = 0.7),
vjust = -0.5,
size = 3) +
labs(title = country,
x = element_blank(),
y = element_blank()) +
theme_cowplot() +
ylim(y_limits) +
theme(
legend.position = "none",
axis.text.x = element_text(size = 8, angle = 45, hjust = 1),
plot.title = element_text(size = 10, face = "bold", hjust = 0.5)
)
})
combined_plot <- cowplot::plot_grid(plotlist = plot_list, ncol = columns)
return(combined_plot)
}
# simpler age at migration plot function (age groups grouped and country colors)
create_grouped_age_plot <- function(data,
age_vars = c("mean_age_at_immigration_15", "mean_age_at_immigration_15to49", "mean_age_at_immigration_50plus"),
country_var = "country_string",
cbPalette,
title = element_blank(),
y_limits = c(0, .7)) {
# Reshape data from wide to long format
data_long <- data %>%
pivot_longer(
cols = all_of(age_vars),
names_to = "age_group",
values_to = "mean_age"
) %>%
mutate(age_group = factor(age_group,
levels = age_vars,
labels = c("Less than 15", "15-49", "50 and above")))
# Create the plot with grouped bars
ggplot(data_long, aes(x = age_group, y = mean_age, fill = .data[[country_var]], group = .data[[country_var]])) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9), width = 0.8, color = "black") +
geom_text(aes(label = round(mean_age, 2)),
position = position_dodge(width = 0.9),
vjust = -0.5,
size = 3.5) +
scale_fill_manual(values = cbPalette) +
labs(
title = title,
x = element_blank(),
y = element_blank(),
fill = "Country of Birth"
) +
theme_cowplot() +
ylim(y_limits) +
theme(
axis.text.x = element_text(size = 11, face = "bold"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
legend.position = "bottom",
legend.title = element_text(face = "bold"),
panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
}
age_migration_plot <- create_faceted_age_plot(table1)
age_migration_plot_alt <- create_faceted_age_plot_alt(table1)
create_combined_faceted_age_plot <- create_combined_faceted_age_plot(table1)
create_combined_faceted_age_plot_single_row <- create_combined_faceted_age_plot(table1, columns = 1)
age_migration_plot <- create_faceted_age_plot(table1)
age_migration_plot_alt <- create_faceted_age_plot_alt(table1)
create_combined_faceted_age_plot <- create_combined_faceted_age_plot(table1)
age_migration_plot <- create_faceted_age_plot(table1)
age_migration_plot_alt <- create_faceted_age_plot_alt(table1)
create_combined_faceted_age_plot <- create_combined_faceted_age_plot(table1)
# age at migration plots
create_faceted_age_plot <- function(data,
age_vars = c("mean_age_at_immigration_15", "mean_age_at_immigration_15to49", "mean_age_at_immigration_50plus"),
country_var = "country_string",
title = element_blank(),
y_limits = c(0, .7)) {
country_colors <- c(
"Mexico" = "#E69F00",
"Puerto Rico" = "#56B4E9",
"Dominican Republic" = "#009E73",
"Cuba" = "#CC79A7"
)
data_long <- data %>%
pivot_longer(
cols = all_of(age_vars),
names_to = "age_group",
values_to = "mean_age"
) %>%
mutate(age_group = factor(age_group,
levels = age_vars,
labels = c("Less than 15", "15 to 49", "50 and above")))
all_colors <- c()
for (country in unique(data[[country_var]])) {
for (j in 1:length(age_vars)) {
key <- paste0(country, "_", j)
all_colors[key] <- country_colors[country]
}
}
data_long <- data_long %>%
mutate(fill_group = paste0(.data[[country_var]], "_", as.numeric(age_group)))
data_long[[country_var]] <- factor(
data_long[[country_var]],
levels = names(country_colors)
)
ggplot(data_long, aes(x = age_group, y = mean_age, fill = fill_group)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7, color = "black") +
geom_text(aes(label = round(mean_age, 2)),
position = position_dodge(width = 0.7),
vjust = -0.5,
size = 4) +
facet_grid(rows = vars(.data[[country_var]]), switch = "y") +
scale_fill_manual(values = all_colors) +
labs(
title = title,
x = element_blank(),
y = element_blank(),
fill = "Country of Birth"
) +
theme_cowplot() +
ylim(y_limits) +
theme(
strip.background = element_blank(),
strip.text.y.left = element_text(size = 12, angle = 0, hjust = 1, face = "bold"),
axis.text.x = element_text(size = 11, face = "bold"),
panel.spacing = unit(0.5, "lines"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
legend.position = "none",
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.y = element_blank(),
panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
}
# alternate version of facets where the country is the column
create_faceted_age_plot_alt <- function(data,
age_vars = c("mean_age_at_immigration_15", "mean_age_at_immigration_15to49", "mean_age_at_immigration_50plus"),
country_var = "country_string",
title = element_blank(),
y_limits = c(0, .7)) {
# Define specific color mapping for countries
country_colors <- c(
"Mexico" = "#E69F00",
"Puerto Rico" = "#56B4E9",
"Dominican Republic" = "#009E73",
"Cuba" = "#CC79A7"
)
# Reshape data from wide to long format for faceting
data_long <- data %>%
pivot_longer(
cols = all_of(age_vars),
names_to = "age_group",
values_to = "mean_age"
) %>%
mutate(age_group = factor(age_group,
levels = age_vars,
labels = c("Less than 15", "15 to 49", "50 and above")))
# Add a combined group for fill mapping
data_long <- data_long %>%
mutate(fill_group = paste0(.data[[country_var]], "_", as.numeric(age_group)))
# Create all color combinations for fill_group
all_colors <- c()
for (country in unique(data[[country_var]])) {
for (j in 1:length(age_vars)) {
key <- paste0(country, "_", j)
all_colors[key] <- country_colors[country]
}
}
# Ensure countries appear in a specific order
data_long[[country_var]] <- factor(
data_long[[country_var]],
levels = names(country_colors)
)
ggplot(data_long, aes(x = .data[[country_var]], y = mean_age, fill = fill_group)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7, color = "black") +
geom_text(aes(label = round(mean_age, 2)),
position = position_dodge(width = 0.7),
vjust = -0.5,
size = 4) +
facet_grid(rows = vars(age_group), switch = "y") +
scale_fill_manual(values = all_colors) +
labs(
title = title,
x = element_blank(),
y = element_blank(),
fill = "Country of Birth"
) +
theme_cowplot() +
ylim(y_limits) +
theme(
strip.background = element_blank(),
strip.text.y.left = element_text(size = 12, angle = 0, hjust = 1, face = "bold"),
axis.text.x = element_text(size = 11, face = "bold", angle = 45, hjust = 1),
panel.spacing = unit(0.5, "lines"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
legend.position = "none",
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.y = element_blank(),
panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
}
# with four panels
create_combined_faceted_age_plot <- function(data,
columns = 2,
age_vars = c("mean_age_at_immigration_15",
"mean_age_at_immigration_15to49",
"mean_age_at_immigration_50plus"),
country_var = "country_string",
title = element_blank(),
y_limits = c(0, .7)) {
country_colors <- c(
"Mexico" = "#E69F00",
"Puerto Rico" = "#56B4E9",
"Dominican Republic" = "#009E73",
"Cuba" = "#CC79A7"
)
data_long <- data %>%
pivot_longer(
cols = all_of(age_vars),
names_to = "age_group",
values_to = "mean_age"
) %>%
mutate(age_group = factor(age_group,
levels = age_vars,
labels = c("Less than 15", "15 to 49", "50 and above"))) %>%
mutate(!!sym(country_var) := factor(!!sym(country_var),
levels = c("Mexico", "Puerto Rico", "Dominican Republic", "Cuba"))) %>%
arrange(!!sym(country_var))
print(data_long)
plot_list <- lapply(unique(data_long[[country_var]]), function(country) {
# Get the specific color for this country
country_color <- country_colors[country]
ggplot(data_long[data_long[[country_var]] == country, ],
aes(x = age_group, y = mean_age)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7,
color = "black", fill = country_color) +
geom_text(aes(label = round(mean_age, 2)),
position = position_dodge(width = 0.7),
vjust = -0.5,
size = 3) +
labs(title = country,
x = element_blank(),
y = element_blank()) +
theme_cowplot() +
ylim(y_limits) +
theme(
legend.position = "none",
axis.text.x = element_text(size = 8, angle = 45, hjust = 1),
plot.title = element_text(size = 10, face = "bold", hjust = 0.5)
)
})
combined_plot <- cowplot::plot_grid(plotlist = plot_list, ncol = columns)
# Add the overall title if provided
if (!identical(title, element_blank())) {
combined_plot <- cowplot::plot_grid(
title, combined_plot,
ncol = 1,
rel_heights = c(0.1, 1)
)
}
return(combined_plot)
}
# simpler age at migration plot function (age groups grouped and country colors)
create_grouped_age_plot <- function(data,
age_vars = c("mean_age_at_immigration_15", "mean_age_at_immigration_15to49", "mean_age_at_immigration_50plus"),
country_var = "country_string",
cbPalette,
title = element_blank(),
y_limits = c(0, .7)) {
# Reshape data from wide to long format
data_long <- data %>%
pivot_longer(
cols = all_of(age_vars),
names_to = "age_group",
values_to = "mean_age"
) %>%
mutate(age_group = factor(age_group,
levels = age_vars,
labels = c("Less than 15", "15-49", "50 and above")))
# Create the plot with grouped bars
ggplot(data_long, aes(x = age_group, y = mean_age, fill = .data[[country_var]], group = .data[[country_var]])) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9), width = 0.8, color = "black") +
geom_text(aes(label = round(mean_age, 2)),
position = position_dodge(width = 0.9),
vjust = -0.5,
size = 3.5) +
scale_fill_manual(values = cbPalette) +
labs(
title = title,
x = element_blank(),
y = element_blank(),
fill = "Country of Birth"
) +
theme_cowplot() +
ylim(y_limits) +
theme(
axis.text.x = element_text(size = 11, face = "bold"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
legend.position = "bottom",
legend.title = element_text(face = "bold"),
panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
)
}
age_migration_plot <- create_faceted_age_plot(table1)
age_migration_plot_alt <- create_faceted_age_plot_alt(table1)
create_combined_faceted_age_plot <- create_combined_faceted_age_plot(table1)
create_combined_faceted_age_plot_single_row <- create_combined_faceted_age_plot(table1,
columns = 1)
age_migration_plot <- create_faceted_age_plot(table1)
age_migration_plot_alt <- create_faceted_age_plot_alt(table1)
create_combined_faceted_age_plot <- create_combined_faceted_age_plot(table1)
# for only migrants
create_migrant_plot <- function(data, y_var,
cbPalette,
title = "Proportion of Migrants with at Least a Secondary Degree by Country of Birth",
y_limits = c(0,1)) {
ggplot(data, aes(x = country_string, y = .data[[y_var]], fill = country_string)) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = round(.data[[y_var]], 2)), # Add labels dynamically
position = position_dodge(width = 0.9), # Adjust for dodged bars
vjust = -0.5, # Move text slightly above the bar
size = 5) + # Adjust text size
scale_fill_manual(values = cbPalette) +
labs(
title = title,
x = element_blank(),
y = "Proportion",
fill = "Country of Origin"
) +
theme_cowplot() +
ylim(y_limits) +
theme(
axis.text.x = element_text(angle = 40, hjust = 1, size = 13, face = "bold"),
legend.position = "none"
)
}
create_migrant_ridges_plot <- function(data,
value_var,        # Continuous variable (e.g., income, education)
country_var,      # Factor with country names
group_var,        # Migrant vs. non-migrant indicator
cbPalette,        # 2-color palette for groups
title = "Distribution Comparison: Migrants vs Non-Migrants",
y_limits = c(0, 1),
country_order = NULL) {  # Optional country ordering
# Reorder countries if specified
if(!is.null(country_order)) {
data <- data %>%
mutate({{country_var}} := fct_relevel(.data[[country_var]], country_order))
}
ggplot(data, aes(
x = .data[[value_var]],
y = .data[[country_var]],
fill = .data[[group_var]]
)) +
geom_density_ridges(
alpha = 0.6,
scale = 0.9,
rel_min_height = 0.01,
color = "white",
panel_scaling = FALSE
) +
scale_fill_manual(values = cbPalette) +
labs(
title = title,
x = "Proportion Value",
y = "Country of Origin",
fill = "Migration Status"
) +
theme_ridges() +
coord_cartesian(xlim = y_limits) +
theme(
legend.position = "right",
axis.title.y = element_text(face = "bold", margin = margin(r = 15)),
axis.text.x = element_text(angle = 40, hjust = 1, size = 13, face = "bold")
)
}
create_migrant_dotplot <- function(data,
x_var,          # Continuous variable (e.g., proportion)
group_var,      # Migrant vs. non-migrant column
country_var,    # Country column
cbPalette,      # Palette for countries
title = "Comparison of Migrant and Non-Migrant Groups",
x_limits = c(0, 1),
country_order = NULL) {
# Reorder countries if specified
if (!is.null(country_order)) {
data <- data %>%
mutate({{country_var}} := fct_relevel(.data[[country_var]], country_order))
}
ggplot(data, aes(
x = .data[[x_var]],
y = 1,  # Dummy y-value for vertical stacking
shape = .data[[group_var]],
color = .data[[country_var]]  # Use country for color
)) +
geom_point(size = 5, position = position_dodge(width = 0.5)) +
# Add connecting red line here
geom_line(aes(group = .data[[country_var]]),
position = position_dodge(width = 0.5),
linewidth = 1) +
facet_grid(rows = vars(.data[[country_var]]), switch = "y") +  # Vertical stacking by country
scale_shape_manual(values = c(17, 16)) +  # Shapes: Migrant=Circle (16), Non-Migrant=Triangle (17)
scale_color_manual(values = cbPalette) +  # Consistent colors for countries
scale_x_continuous(limits = x_limits) +
labs(
title = title,
x = "Proportion Value",
y = NULL,
shape = "Migration Status",
color = "Country of Origin"
) +
theme_cowplot() +
theme(
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major.y = element_blank(),
strip.background = element_blank(),  # Remove gray background from facet strips
strip.text.y.left = element_text(size = 12, angle = 0, hjust = 1, face = "bold"), # Make labels larger
legend.position = "bottom", # Move legend to the bottom
legend.direction = "horizontal", # Arrange legend items horizontally
legend.box = "horizontal", # Ensure the box layout is horizontal
legend.text = element_text(size = 8),# Reduce legend text size
legend.title = element_text(size = 9),# Reduce legend title size
panel.spacing = unit(0.5, "lines"),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5)
)
}
age_migration_plot <- create_faceted_age_plot(table1)
age_migration_plot_alt <- create_faceted_age_plot_alt(table1)
create_combined_faceted_age_plot <- create_combined_faceted_age_plot(table1)
age_migration_plot <- create_faceted_age_plot(table1)
age_migration_plot_alt <- create_faceted_age_plot_alt(table1)
create_combined_faceted_age_plot <- create_combined_faceted_age_plot(table1)
rm(dot_plot)
rm(stress_data)
