ggsave(filename = paste0(out_dir,"migration_cohort_education_panels.jpg"), plot = combined_plot_migration_cohort, width = 12, height = 9, dpi = 300)
countries <- c("mexico", "puerto rico", "dominican republic", "cuba")
result_list <- list()
for (country in countries) {
prop_cohort_education_country <- us_df_2020 %>%
filter(country_string == country) %>%
group_by(age_at_immig_groups_string) %>%
summarise(
secondary_or_above = weighted.mean(secondary_or_above, perwt, na.rm = TRUE)
)
result_list[[country]] <- prop_cohort_education_country$secondary_or_above
}
prop_age_at_immig_education <- data.frame(
age_at_immig_groups = prop_cohort_education_country$age_at_immig_groups_string,
do.call(cbind, result_list)
) %>%
mutate(age_at_immig_groups = factor(age_at_immig_groups,
levels = c("Under 15", "15-49", "50 and above")))
prop_age_at_immig_education_long <- prop_age_at_immig_education %>%
pivot_longer(cols = -age_at_immig_groups,
names_to = "country",
values_to = "proportion") %>%
mutate(country = str_to_title(country))
create_country_plot <- function(country_data) {
ggplot(country_data, aes(x = proportion, y = age_at_immig_groups, fill = age_at_immig_groups)) +
geom_bar(stat = "identity") +
geom_text(aes(label = scales::percent(proportion, accuracy = 0.1)),
hjust = -0.1, size = 3) +
scale_x_continuous(labels = scales::percent, limits = c(0, 1)) +
scale_fill_manual(name = "Age at Immigration",
values = c("Under 15" = "#66c2a5",
"15-49" = "#fc8d62",
"50 and above" = "#8da0cb")) +
labs(title = unique(country_data$country),
x = "Proportion with At Least Secondary Education",
y = "Age at Immigration") +
theme_cowplot() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.title.x = element_blank())
}
country_plots <- prop_age_at_immig_education_long %>%
split(.$country) %>%
map(create_country_plot)
combined_plot <- wrap_plots(country_plots, ncol = 2) +
plot_annotation(
title = "Proportion with At Least Secondary Education by Age at Immigration and Country of Origin",
subtitle = "Based on 2020 dataset",
theme = theme(plot.title = element_text(hjust = 0.5, size = 14),
plot.subtitle = element_text(hjust = 0.5, size = 12))
) &
theme(legend.position = "bottom")
combined_plot_age_at_immig <- combined_plot +
plot_layout(guides = "collect") &
theme(legend.position = "bottom")
print(combined_plot_age_at_immig)
ggsave(filename = paste0(out_dir,"age_at_immig_education_panels.jpg"),
plot = combined_plot_age_at_immig,
width = 12, height = 9, dpi = 300)
countries <- c("mexico", "puerto rico", "dominican republic", "cuba")
result_list <- list()
for (country in countries) {
prop_cohort_english_country <- us_df_2020 %>%
filter(country_string == country) %>%
group_by(age_at_immig_groups_string) %>%
summarise(
english_speaker = weighted.mean(english_speaker, perwt, na.rm = TRUE)
)
result_list[[country]] <- prop_cohort_english_country$english_speaker
}
prop_age_at_immig_english <- data.frame(
age_at_immig_groups = prop_cohort_english_country$age_at_immig_groups_string,
do.call(cbind, result_list)
) %>%
mutate(age_at_immig_groups = factor(age_at_immig_groups,
levels = c("Under 15", "15-49", "50 and above")))
prop_age_at_immig_english_long <- prop_age_at_immig_english %>%
pivot_longer(cols = -age_at_immig_groups,
names_to = "country",
values_to = "proportion") %>%
mutate(country = str_to_title(country))
create_country_plot <- function(country_data) {
ggplot(country_data, aes(x = proportion, y = age_at_immig_groups, fill = age_at_immig_groups)) +
geom_bar(stat = "identity") +
geom_text(aes(label = scales::percent(proportion, accuracy = 0.1)),
hjust = -0.1, size = 3) +
scale_x_continuous(labels = scales::percent, limits = c(0, 1)) +
scale_fill_manual(name = "Age at Immigration",
values = c("Under 15" = "#66c2a5",
"15-49" = "#fc8d62",
"50 and above" = "#8da0cb")) +
labs(title = unique(country_data$country),
x = "Proportion of English Speakers",
y = "Age at Immigration") +
theme_cowplot() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.title.x = element_blank())
}
country_plots <- prop_age_at_immig_english_long %>%
split(.$country) %>%
map(create_country_plot)
combined_plot <- wrap_plots(country_plots, ncol = 2) +
plot_annotation(
title = "Proportion of English Speakers by Age at Immigration and Country of Origin",
subtitle = "Based on 2020 dataset",
theme = theme(plot.title = element_text(hjust = 0.5, size = 14),
plot.subtitle = element_text(hjust = 0.5, size = 12))
) &
theme(legend.position = "bottom")
combined_plot_age_at_immig <- combined_plot +
plot_layout(guides = "collect") &
theme(legend.position = "bottom")
print(combined_plot_age_at_immig)
ggsave(filename = paste0(out_dir,"age_at_immig_english_panels.jpg"),
plot = combined_plot_age_at_immig,
width = 12, height = 9, dpi = 300)
View(table2_consolidated)
countries <- c("Mexicans", "Puerto Ricans", "Dominicans", "Cubans", "US Mexican-born", "US Puerto-Rican-born", "US Dominican-born", "US Cuban-born")
education <- c("Under 15", "15-49", "50 and above")
create_country_plot <- function(country, table2_consolidated) {
prop_educated <- data.frame(
levels = education,
proportion = as.numeric(table2_consolidated[12:14, country])
)
# Add the remaining proportion to make it sum to 1
prop_educated <- prop_educated %>%
add_row(levels = "Other", proportion = 1 - sum(prop_educated$proportion))
ggplot(prop_educated, aes(x = "", y = proportion, fill = levels)) +
geom_bar(stat = "identity", width = 0.5) +
geom_text(aes(label = scales::percent(proportion, accuracy = 0.1)),
position = position_stack(vjust = 0.5), size = 3) +
scale_y_continuous(labels = scales::percent) +
scale_fill_manual(name = "Age at Immigration",
values = c("Under 15" = "#66c2a5",
"15-49" = "#fc8d62",
"50 and above" = "#8da0cb",
"Other" = "#e78ac3")) +
labs(title = country,
y = element_blank(),
x = NULL) +
theme_cowplot() +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
legend.position = "none",
plot.title = element_text(hjust = 0.5, size = 10),
plot.subtitle = element_text(hjust = 0.5))
}
# Create plots for all countries
plots <- lapply(countries, function(country) create_country_plot(country, table2_consolidated))
countries <- c("Mexico", "Puerto Rico", "Dominican Republic", "Cuba")
education <- c("Under 15", "15-49", "50 and above")
create_country_plot <- function(country, table2_consolidated) {
prop_educated <- data.frame(
levels = education,
proportion = as.numeric(table2_consolidated[12:14, country])
)
# Add the remaining proportion to make it sum to 1
prop_educated <- prop_educated %>%
add_row(levels = "Other", proportion = 1 - sum(prop_educated$proportion))
ggplot(prop_educated, aes(x = "", y = proportion, fill = levels)) +
geom_bar(stat = "identity", width = 0.5) +
geom_text(aes(label = scales::percent(proportion, accuracy = 0.1)),
position = position_stack(vjust = 0.5), size = 3) +
scale_y_continuous(labels = scales::percent) +
scale_fill_manual(name = "Age at Immigration",
values = c("Under 15" = "#66c2a5",
"15-49" = "#fc8d62",
"50 and above" = "#8da0cb",
"Other" = "#e78ac3")) +
labs(title = country,
y = element_blank(),
x = NULL) +
theme_cowplot() +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
legend.position = "none",
plot.title = element_text(hjust = 0.5, size = 10),
plot.subtitle = element_text(hjust = 0.5))
}
# Create plots for all countries
plots <- lapply(countries, function(country) create_country_plot(country, table2_consolidated))
str(table2_consolidated)
countries <- c("Mexicans", "Puerto Ricans", "Dominicans", "Cubans", "US Mexican-born", "US Puerto-Rican-born", "US Dominican-born", "US Cuban-born")
education <- c("Under 15", "15-49", "50 and above")
create_country_plot <- function(country, table2_consolidated) {
prop_educated <- table2_consolidated %>%
filter(row_number() %in% 12:14) %>%
select(all_of(country)) %>%
mutate(levels = education,
proportion = as.numeric(!!sym(country))) %>%
select(levels, proportion)
# Add the remaining proportion to make it sum to 1
prop_educated <- prop_educated %>%
add_row(levels = "Other", proportion = 1 - sum(prop_educated$proportion, na.rm = TRUE))
ggplot(prop_educated, aes(x = "", y = proportion, fill = levels)) +
geom_bar(stat = "identity", width = 0.5) +
geom_text(aes(label = scales::percent(proportion, accuracy = 0.1)),
position = position_stack(vjust = 0.5), size = 3) +
scale_y_continuous(labels = scales::percent) +
scale_fill_manual(name = "Age at Immigration",
values = c("Under 15" = "#66c2a5",
"15-49" = "#fc8d62",
"50 and above" = "#8da0cb",
"Other" = "#e78ac3")) +
labs(title = country,
y = element_blank(),
x = NULL) +
theme_cowplot() +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
legend.position = "none",
plot.title = element_text(hjust = 0.5, size = 10),
plot.subtitle = element_text(hjust = 0.5))
}
plots <- map(countries, ~create_country_plot(.x, table2_consolidated))
countries <- c("Mexico", "Puerto Rico", "Dominican Republic", "Cuba")
education <- c("Under 15", "15-49", "50 and above")
create_country_plot <- function(country, table2_consolidated) {
prop_educated <- table2_consolidated %>%
filter(row_number() %in% 12:14) %>%
select(all_of(country)) %>%
mutate(levels = education,
proportion = as.numeric(!!sym(country))) %>%
select(levels, proportion)
# Add the remaining proportion to make it sum to 1
prop_educated <- prop_educated %>%
add_row(levels = "Other", proportion = 1 - sum(prop_educated$proportion, na.rm = TRUE))
ggplot(prop_educated, aes(x = "", y = proportion, fill = levels)) +
geom_bar(stat = "identity", width = 0.5) +
geom_text(aes(label = scales::percent(proportion, accuracy = 0.1)),
position = position_stack(vjust = 0.5), size = 3) +
scale_y_continuous(labels = scales::percent) +
scale_fill_manual(name = "Age at Immigration",
values = c("Under 15" = "#66c2a5",
"15-49" = "#fc8d62",
"50 and above" = "#8da0cb",
"Other" = "#e78ac3")) +
labs(title = country,
y = element_blank(),
x = NULL) +
theme_cowplot() +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
legend.position = "none",
plot.title = element_text(hjust = 0.5, size = 10),
plot.subtitle = element_text(hjust = 0.5))
}
plots <- map(countries, ~create_country_plot(.x, table2_consolidated))
combined_plot <- wrap_plots(plots, ncol = 4) +
plot_annotation(
title = "Age at Immigration by Country of Origin",
subtitle = "Based on 2020 dataset",
theme = theme(plot.title = element_text(hjust = 0.5, size = 16),
plot.subtitle = element_text(hjust = 0.5, size = 12))
) &
theme(legend.position = "bottom")
combined_plot <- combined_plot +
plot_layout(guides = "collect") &
theme(legend.position = "bottom")
ggsave(filename = paste0(out_dir, "age_at_immigration_panels.jpg"), plot = combined_plot, width = 15, height = 10, dpi = 300)
library(tidyverse)
library(cowplot)
library(patchwork)
countries <- c("mexico", "puerto rico", "dominican republic", "cuba")
result_list <- list()
for (country in countries) {
prop_cohort_age_at_immig <- us_df_2020 %>%
filter(country_string == country) %>%
summarise(
`Under 15` = weighted.mean(age_at_immigration_under15, perwt, na.rm = TRUE),
`15-49` = weighted.mean(age_at_immigration_15to49, perwt, na.rm = TRUE),
`50 and above` = weighted.mean(age_at_immigration_50plus, perwt, na.rm = TRUE)
)
result_list[[country]] <- prop_cohort_age_at_immig
}
prop_age_at_immig <- bind_rows(result_list, .id = "country") %>%
pivot_longer(cols = -country, names_to = "age_at_immig_groups", values_to = "proportion") %>%
mutate(
country = str_to_title(country),
age_at_immig_groups = factor(age_at_immig_groups, levels = c("Under 15", "15-49", "50 and above"))
)
create_country_plot <- function(country_data) {
ggplot(country_data, aes(x = proportion, y = age_at_immig_groups, fill = age_at_immig_groups)) +
geom_bar(stat = "identity") +
geom_text(aes(label = scales::percent(proportion, accuracy = 0.1)),
hjust = -0.1, size = 3) +
scale_x_continuous(labels = scales::percent, limits = c(0, 1)) +
scale_fill_manual(name = "Age at Immigration",
values = c("Under 15" = "#66c2a5",
"15-49" = "#fc8d62",
"50 and above" = "#8da0cb")) +
labs(title = unique(country_data$country),
x = "Proportion of Age at Immigration",
y = "Age at Immigration") +
theme_cowplot() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.title.x = element_blank())
}
country_plots <- prop_age_at_immig %>%
split(.$country) %>%
map(create_country_plot)
combined_plot <- wrap_plots(country_plots, ncol = 2) +
plot_annotation(
title = "Proportion of Age at Immigration by Country of Origin",
subtitle = "Based on 2020 dataset",
theme = theme(plot.title = element_text(hjust = 0.5, size = 14),
plot.subtitle = element_text(hjust = 0.5, size = 12))
) &
theme(legend.position = "bottom")
combined_plot_age_at_immig <- combined_plot +
plot_layout(guides = "collect") &
theme(legend.position = "bottom")
print(combined_plot_age_at_immig)
ggsave(filename = paste0(out_dir,"age_at_immig_prop_panels.jpg"),
plot = combined_plot_age_at_immig,
width = 12, height = 9, dpi = 300)
colnames(us_df_2020)
library(haven)
library(tidyverse)
library(xtable)
library(kableExtra)
library(readxl)
library(officer)
library(broom)
library(writexl)
library(scales)
library(readr)
target_dir <- normalizePath("/Users/chrissoria/Documents/Research/us_international_ses/tables/r_tables")
current_dir <- normalizePath(getwd())
if (current_dir == target_dir) {
out_dir <- file.path("/Users/chrissoria/Documents/Research/us_international_ses/tables/r_tables/")
data_dir <- file.path("/Users/chrissoria/Documents/Research/us_international_ses/data/")
plot_dir <- file.path("/Users/chrissoria/Documents/Research/us_international_ses//plots/")
} else {
out_dir <- file.path("C:/Users/Ty/Desktop/ses_international/tables/r_tables//")
data_dir <- file.path("C:/Users/Ty/Desktop/ses_international/data//")
plot_dir <- file.path("C:/Users/Ty/Desktop/ses_international/plots//")
}
print(getwd())
# US
us_df_2010 <- read_dta(paste0(data_dir, "US_2010_v100.dta"))
us_df_2020 <- read_dta(paste0(data_dir, "US_2020_v100.dta"))
#international censuses
in_df <- read_dta(paste0(data_dir,"CuDrMePrUs_10_12.dta"))
in_df <- in_df %>%
mutate(country_year_bpl = as_factor(country_year_bpl))
# background data
gdp <- read_excel(paste0(data_dir, "gdp_per_capita.xlsx"))
gdp <- gdp %>%
filter(...1 %in% c("Cuba", "Dominican Republic", "Puerto Rico", "Mexico", "United States")) %>%
mutate(`2023` = if_else(...1 == "Cuba", "7449.68", `2023`)) %>% #cuba gdp per capita is 2022
rename(gdp = `2023`,
country = ...1)
#life expectancy at 60
e60 <- read_csv(paste0(data_dir, "e60.csv")) %>%
filter(Location %in% c("Cuba", "Dominican Republic", "Puerto Rico", "Mexico"),
Period == 2010,
Indicator == "Life expectancy at age 60 (years)") %>%
select(Dim1, Value, Location) %>%
separate(Value, into = c("e60", "CI_lower", "CI_upper"),
sep = " \\[|\\-|\\]",
convert = TRUE,
extra = "drop") %>%
rename(country = Location,
e60_gender = Dim1)
#infant mortality rates
ifr_path <- paste0(data_dir, "IFR")
ifr_files <- list.files(path = ifr_path, pattern = "*.csv", full.names = TRUE, ignore.case = TRUE)
ifr_dfs <- lapply(ifr_files, function(file) {
tryCatch({
read_csv(file, col_types = cols(.default = "c"))  # Read all columns as character initially
}, error = function(e) {
warning(paste("Error reading file:", file, "-", e$message))
return(NULL)
})
})
names(ifr_dfs) <- basename(ifr_files)
ifr_dfs <- ifr_dfs[!sapply(ifr_dfs, is.null)]  # Remove any NULL entries (failed reads)
ifr_dfs <- lapply(names(ifr_dfs), function(name) {
df <- ifr_dfs[[name]]
df %>%
mutate(
df_name = name,
Int. = as.numeric(Int.),
`Ref. date` = as.numeric(`Ref. date`)
) %>%
filter(`Ref. date` %in% c(1950,2010))
})
ifr_df <- bind_rows(ifr_dfs) %>%
filter(!is.na(`Std. err`) & !Name %in% c("Census 2010 (Household Deaths)", "Demographic and Health Survey 2013 (Direct)", "VR from Oficina Nacional de Estadistica 2021 (VR)", "Encuesta Nacional de la Dinamica Demografica (ENADID) 2018 (Direct)", "Vital Registration data from Mexico Ministry of Health 2018 (VR)")) %>%
filter(!df_name %in% c("COL-Infant mortality rate-Total-datasources-download.csv",
"GTM-Infant mortality rate-Total-datasources-download.csv",
"HND-Infant mortality rate-Total-datasources-download.csv",
"SLV-Infant mortality rate-Total-datasources-download.csv")) %>%
mutate(country = case_when(
df_name == "CUB-Infant mortality rate-Total-datasources-download.csv" ~ "Cuba",
df_name == "DOM-Infant mortality rate-Total-datasources-download.csv" ~ "Dominican Republic",
df_name == "MEX-Infant mortality rate-Total-datasources-download.csv" ~ "Mexico",
df_name == "USA-Infant mortality rate-Total-datasources-download.csv" ~ "United States",
TRUE ~ NA_character_
)) %>%
select(Value, `Ref. date`, country) %>%
mutate(Value = as.character(Value)) %>%
add_row(Value = "6.861", `Ref. date` = 2010, country = "Puerto Rico") %>%
add_row(Value = "70.531", `Ref. date` = 1950, country = "Puerto Rico") %>%
add_row(Value = "87.121", `Ref. date` = 1950, country = "Cuba") %>%
rename(ifr = Value,
ifr_year = `Ref. date`) %>%
slice(-2)
ifr_df <- bind_rows(ifr_dfs) %>%
filter(!Name %in% c("Census 2010 (Household Deaths)", "Demographic and Health Survey 2013 (Direct)", "VR from Oficina Nacional de Estadistica 2021 (VR)", "Encuesta Nacional de la Dinamica Demografica (ENADID) 2018 (Direct)", "Vital Registration data from Mexico Ministry of Health 2018 (VR)")) %>%
filter(!df_name %in% c("COL-Infant mortality rate-Total-datasources-download.csv",
"GTM-Infant mortality rate-Total-datasources-download.csv",
"HND-Infant mortality rate-Total-datasources-download.csv",
"SLV-Infant mortality rate-Total-datasources-download.csv")) %>%
mutate(country = case_when(
df_name == "CUB-Infant mortality rate-Total-datasources-download.csv" ~ "Cuba",
df_name == "DOM-Infant mortality rate-Total-datasources-download.csv" ~ "Dominican Republic",
df_name == "MEX-Infant mortality rate-Total-datasources-download.csv" ~ "Mexico",
df_name == "USA-Infant mortality rate-Total-datasources-download.csv" ~ "United States",
TRUE ~ NA_character_
)) %>%
select(Value, `Ref. date`, country) %>%
mutate(Value = as.character(Value)) %>%
add_row(Value = "6.861", `Ref. date` = 2010, country = "Puerto Rico") %>%
add_row(Value = "70.531", `Ref. date` = 1950, country = "Puerto Rico") %>%
add_row(Value = "87.121", `Ref. date` = 1950, country = "Cuba") %>%
rename(ifr = Value,
ifr_year = `Ref. date`) %>%
slice(-2)
# US
us_df_2010 <- read_dta(paste0(data_dir, "US_2010_v100.dta"))
us_df_2020 <- read_dta(paste0(data_dir, "US_2020_v100.dta"))
#international censuses
in_df <- read_dta(paste0(data_dir,"CuDrMePrUs_10_12.dta"))
in_df <- in_df %>%
mutate(country_year_bpl = as_factor(country_year_bpl))
# background data
gdp <- read_excel(paste0(data_dir, "gdp_per_capita.xlsx"))
gdp <- gdp %>%
filter(...1 %in% c("Cuba", "Dominican Republic", "Puerto Rico", "Mexico", "United States")) %>%
mutate(`2023` = if_else(...1 == "Cuba", "7449.68", `2023`)) %>% #cuba gdp per capita is 2022
rename(gdp = `2023`,
country = ...1)
#life expectancy at 60
e60 <- read_csv(paste0(data_dir, "e60.csv")) %>%
filter(Location %in% c("Cuba", "Dominican Republic", "Puerto Rico", "Mexico"),
Period == 2010,
Indicator == "Life expectancy at age 60 (years)") %>%
select(Dim1, Value, Location) %>%
separate(Value, into = c("e60", "CI_lower", "CI_upper"),
sep = " \\[|\\-|\\]",
convert = TRUE,
extra = "drop") %>%
rename(country = Location,
e60_gender = Dim1)
#infant mortality rates
ifr_path <- paste0(data_dir, "IFR")
ifr_files <- list.files(path = ifr_path, pattern = "*.csv", full.names = TRUE, ignore.case = TRUE)
ifr_dfs <- lapply(ifr_files, function(file) {
tryCatch({
read_csv(file, col_types = cols(.default = "c"))  # Read all columns as character initially
}, error = function(e) {
warning(paste("Error reading file:", file, "-", e$message))
return(NULL)
})
})
names(ifr_dfs) <- basename(ifr_files)
ifr_dfs <- ifr_dfs[!sapply(ifr_dfs, is.null)]  # Remove any NULL entries (failed reads)
ifr_dfs <- lapply(names(ifr_dfs), function(name) {
df <- ifr_dfs[[name]]
df %>%
mutate(
df_name = name,
Int. = as.numeric(Int.),
`Ref. date` = as.numeric(`Ref. date`)
) %>%
filter(`Ref. date` %in% c(1950,2010))
})
ifr_df <- bind_rows(ifr_dfs) %>%
filter(!Name %in% c("Census 2010 (Household Deaths)", "Demographic and Health Survey 2013 (Direct)", "VR from Oficina Nacional de Estadistica 2021 (VR)", "Encuesta Nacional de la Dinamica Demografica (ENADID) 2018 (Direct)", "Vital Registration data from Mexico Ministry of Health 2018 (VR)")) %>%
filter(!df_name %in% c("COL-Infant mortality rate-Total-datasources-download.csv",
"GTM-Infant mortality rate-Total-datasources-download.csv",
"HND-Infant mortality rate-Total-datasources-download.csv",
"SLV-Infant mortality rate-Total-datasources-download.csv")) %>%
mutate(country = case_when(
df_name == "CUB-Infant mortality rate-Total-datasources-download.csv" ~ "Cuba",
df_name == "DOM-Infant mortality rate-Total-datasources-download.csv" ~ "Dominican Republic",
df_name == "MEX-Infant mortality rate-Total-datasources-download.csv" ~ "Mexico",
df_name == "USA-Infant mortality rate-Total-datasources-download.csv" ~ "United States",
TRUE ~ NA_character_
)) %>%
select(Value, `Ref. date`, country) %>%
mutate(Value = as.character(Value)) %>%
add_row(Value = "6.861", `Ref. date` = 2010, country = "Puerto Rico") %>%
add_row(Value = "70.531", `Ref. date` = 1950, country = "Puerto Rico") %>%
add_row(Value = "87.121", `Ref. date` = 1950, country = "Cuba") %>%
rename(ifr = Value,
ifr_year = `Ref. date`) %>%
slice(-2)
ifr_df
View(ifr_dfs)
